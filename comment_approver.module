<?php

/**
 * @file
 * Contains comment_approver.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\comment_approver\CommentTesterInterface;

/**
 * Implements hook_help().
 */
function comment_approver_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the comment_approver module.
    case 'help.page.comment_approver':
      $output = '<pre>' . file_get_contents(drupal_get_path('module', 'comment_approver') . '/README.md') . '</pre>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function comment_approver_theme() {
  return [
    'comment_approver' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_Entity_type_presave().
 */
function comment_approver_comment_presave(EntityInterface $entity) {
  $comment = $entity;
  $commentTester = \Drupal::service('comment_approver.tester');
  $current_mode = $commentTester->getMode();
  if (!$entity->get('status')->value) {
    if ($current_mode == CommentTesterInterface::APPROVER) {

      // Perform approval test
      // Test for automated approval of comment if skip comment approval is
      // disabled and set the comment status to 1 if test passes.
      if ($commentTester->test($comment)) {
        $entity->set('status', 1);
      }
    }
  }
  elseif (!Drupal::currentUser()->hasPermission('administer comments') && $current_mode == CommentTesterInterface::BLOCKER) {
    // Perform blocker test.
    if (!$commentTester->test($comment)) {
      $entity->set('status', 0);
    }
  }
}
